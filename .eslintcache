[{"C:\\Users\\memeo\\lions\\lions_front\\src\\index.tsx":"1","C:\\Users\\memeo\\lions\\lions_front\\src\\reportWebVitals.ts":"2","C:\\Users\\memeo\\lions\\lions_front\\src\\App.tsx":"3","C:\\Users\\memeo\\lions\\lions_front\\src\\screens\\admin\\login.tsx":"4","C:\\Users\\memeo\\lions\\lions_front\\src\\screens\\admin\\main.tsx":"5","C:\\Users\\memeo\\lions\\lions_front\\src\\common.js":"6","C:\\Users\\memeo\\lions\\lions_front\\src\\screens\\notfound.tsx":"7","C:\\Users\\memeo\\lions\\lions_front\\src\\screens\\admin\\addMember.tsx":"8"},{"size":448,"mtime":1612850267417,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1610086587865,"results":"11","hashOfConfig":"10"},{"size":643,"mtime":1613596457873,"results":"12","hashOfConfig":"10"},{"size":2926,"mtime":1612852656386,"results":"13","hashOfConfig":"10"},{"size":14226,"mtime":1613894030395,"results":"14","hashOfConfig":"10"},{"size":82,"mtime":1611371040394,"results":"15","hashOfConfig":"10"},{"size":100,"mtime":1612819185281,"results":"16","hashOfConfig":"10"},{"size":10037,"mtime":1613896254606,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"kt84y8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\memeo\\lions\\lions_front\\src\\index.tsx",[],["40","41"],"C:\\Users\\memeo\\lions\\lions_front\\src\\reportWebVitals.ts",[],["42","43"],"C:\\Users\\memeo\\lions\\lions_front\\src\\App.tsx",["44","45"],"import React from 'react';\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport AdminLogin from './screens/admin/login';\nimport AdminMain from './screens/admin/main';\nimport AddMember from './screens/admin/addMember';\nimport {NotFound} from './screens/notfound';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/admin\" component={AdminLogin} />\n        <Route path=\"/adminMain\" component={AdminMain} />\n        {/* <Route path=\"/addMember\" component={AddMember} /> */}\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n  ","C:\\Users\\memeo\\lions\\lions_front\\src\\screens\\admin\\login.tsx",["46","47","48","49","50","51"],"import React from 'react';\r\nimport logo from '../../images/lions_main.png';\r\nimport './login.css';\r\nimport comm from '../../common';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { gql, useMutation, useQuery, useSubscription } from \"@apollo/client\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n  \r\n// import { onError } from \"@apollo/client/link/error\";\r\n// export const LOGIN_ADMIN_MUTATION = gql`\r\n//     mutation loginMutation($loginInput: LoginInput!){\r\n//         login(input: $loginInput){\r\n//             error\r\n//             ok\r\n//             token\r\n//         }\r\n//     }\r\n// `;\r\n\r\n\r\nconst AdminLogin = (props:any) => {\r\n    let id =\"\";\r\n    let password = \"\";\r\n    const history = useHistory();\r\n\r\n    // const onCompleted = (data : any) => {\r\n    //     console.log(\"onCompleted >> \", data);\r\n    // };\r\n    // const [loginMutation] = useMutation(LOGIN_ADMIN_MUTATION,{onCompleted});\r\n    // console.log(\" loginMutation >> \", loginMutation);\r\n\r\n    const onIdInputChange = (ev:any) => {\r\n        console.log(\" onChange => \", ev.target.value);\r\n        id = ev.target.value;\r\n    }\r\n\r\n    const onPasswordInputChange = (ev:any) => {\r\n        console.log(\" onChange => \", ev.target.value);\r\n        password = ev.target.value;\r\n    }\r\n\r\n    const submit = () =>{\r\n        // axios.get(comm.SERVER_URL+\"/admin/test\").then(res => {\r\n        //     console.log(\" res => \", res);\r\n        // });\r\n        if(id && password){\r\n            axios.get(comm.SERVER_URL+\"/admin\", { params:{\r\n                mId:id,\r\n                pass: password,\r\n            }}).then((res)=>{\r\n                console.log(\" res >> \", res.data);\r\n                if(res.status === 200){\r\n                    // log in 성공\r\n                    history.push(\"/adminMain\");\r\n                }\r\n            })\r\n        }else{\r\n            alert(\"아이디 혹은 패쓰워드를 입력해주세요\");\r\n        }\r\n    }\r\n \r\n    return(\r\n        <>\r\n            <div>\r\n                <img className='top' src={logo}  />\r\n            </div>\r\n            <div className='login'>\r\n                <div className='inputArea'>\r\n                    <TextField className='textInput' id=\"outlined-basic\" label=\"아이디\" variant=\"outlined\" onChange={onIdInputChange} />\r\n                    <TextField className='textInput' id=\"outlined-basic\" label=\"패쓰워드\" variant=\"outlined\" type=\"password\" onChange={onPasswordInputChange} />\r\n                </div>\r\n                <div className='blank'></div>\r\n                <div className='wrapperBtn'>\r\n                    <div className='blank2'></div>\r\n                    <Button className='button' variant=\"contained\" color=\"primary\"><span className=\"btnText\" onClick={submit}>로그인</span></Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminLogin;","C:\\Users\\memeo\\lions\\lions_front\\src\\screens\\admin\\main.tsx",["52","53","54","55","56","57","58","59","60"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport logo from '../../images/lions_logo.png';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport axios from 'axios';\r\nimport comm from '../../common';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddMember from './addMember';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\ninterface MainPros {\r\n    id: string,\r\n    pass: string,\r\n}\r\n\r\ninterface userDto {\r\n    id: number;\r\n    name: string;\r\n    position: string;\r\n    startDay: string;\r\n    job: string;\r\n    address: string;\r\n    mobileNum: string;\r\n    phoneNumHome: string;\r\n    phoneNumWork: string;\r\n    email: string;\r\n    belongTo: string;\r\n    imgName:string;\r\n}\r\n\r\nfunction AdminMain(): any {\r\n    const refJigu = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    const [jigu, setJigu] = useState(0);\r\n    const [jiyeok, setJiyeok] = useState(0);\r\n    const [jidae, setJidae] = useState(0);\r\n    const [club, setClub] = useState(0);\r\n    const [jiguList, setjiguList] = useState([{ id: 0, name: \"지구를 입력하세요\" }]);\r\n    const [jiyeokList, setjiyeokList] = useState([]);\r\n    const [jidaeList, setjidaeList] = useState([]);\r\n    const [clubList, setClubList] = useState([]);\r\n    const [userList, setUserList] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [deleteId, setDeleteId] = useState(0);\r\n    const [member, setMember] = useState(-1);\r\n    \r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios.get(comm.SERVER_URL + \"/group/jigu\").then(res => {\r\n            console.log(\"jiguRes => \", res.data);\r\n            setjiguList(res.data);\r\n        })\r\n    }, []);\r\n\r\n    const handleJiguChange = (ev: any) => {\r\n        let selectedJigu = ev.target.value;\r\n        console.log(\" selectedJigu > \", selectedJigu);\r\n        setJigu(ev.target.value);\r\n        setjiyeokList([]);\r\n        setjidaeList([]);\r\n        setClubList([]);\r\n        setUserList([]);\r\n        axios.get(comm.SERVER_URL + \"/group/jiyeok\", {\r\n            params: {\r\n                id: selectedJigu\r\n            }\r\n        }).then(res => {\r\n            console.log(\" res => \", res.data);\r\n            setjiyeokList(res.data);\r\n        })\r\n\r\n    }\r\n    const handleJiyeokChange = (ev: any) => {\r\n        setJiyeok(ev.target.value);\r\n        let selectedJiyeok = ev.target.value;\r\n        setjidaeList([]);\r\n        setClubList([]);\r\n        setUserList([]);\r\n        axios.get(comm.SERVER_URL + \"/group/jidae\", {\r\n            params: {\r\n                id: selectedJiyeok\r\n            }\r\n        }).then(res => {\r\n            console.log(\" res => \", res.data);\r\n            setjidaeList(res.data);\r\n        })\r\n    }\r\n\r\n    const handleJidaeChange = (ev: any) => {\r\n        setJidae(ev.target.value);\r\n        let selectedJidae = ev.target.value;\r\n        setClubList([]);\r\n        setUserList([]);\r\n        axios.get(comm.SERVER_URL + \"/group/club\", {\r\n            params: {\r\n                id: selectedJidae\r\n            }\r\n        }).then(res => {\r\n            console.log(\" res => \", res.data);\r\n            setClubList(res.data);\r\n        })\r\n\r\n    }\r\n\r\n    const getUserList = (clubId:number) => {\r\n        axios.get(comm.SERVER_URL + \"/member/club\", {\r\n            params: {\r\n                id: clubId\r\n            }\r\n        }).then(res => {\r\n            console.log(\" getUserList res >> \", res.data);\r\n            setUserList(res.data);\r\n        })\r\n    };\r\n\r\n    const handleClubChange = (ev: any) => {\r\n        console.log(\" club Id ==> \", ev.target.value);\r\n        setClub(ev.target.value);\r\n        // Fetch Data of designated club members \r\n        getUserList(ev.target.value);\r\n    }\r\n\r\n    const handleClickSelect = (ev: any) => {\r\n        console.log(\" ev >>>>> \", ev.target.value);\r\n    }\r\n\r\n    const handleDetail = (id:number) => {\r\n        console.log(\" id >>>>> \", id);\r\n        setMember(id)\r\n        setOpenModal(true);\r\n    };\r\n\r\n    const DeleteWarningSnackBar = () => {\r\n\r\n        const handleDeleteMember = () => {\r\n            axios.delete(comm.SERVER_URL + \"/member\", {\r\n                params: {\r\n                    id: deleteId\r\n                }\r\n            }).then(res => {\r\n                console.log(\"handleDeleteMember res => \", res.data);\r\n                setOpen(false);\r\n                getUserList(club);\r\n            });\r\n           \r\n        };\r\n\r\n        const handleClose = () => {\r\n            setOpen(false);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    style={{ backgroundColor: '#000000' }}\r\n                    open={open}\r\n                    //   autoHideDuration={6000}\r\n                    onClose={handleClose}\r\n                    message=\"삭제 진행 버튼을 클릭하시면 해당 회원이 삭제됩니다. 정말로 삭제 하시겠습니까?\"\r\n                    action={\r\n                        <div className=\"flex flex-row justify-start items-center\">\r\n                            <Button color=\"secondary\" variant=\"contained\" size=\"medium\" onClick={handleDeleteMember}>\r\n                                삭제 진행\r\n                  </Button>\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                onClick={handleClose}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            modal: {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            },\r\n            paper: {\r\n                backgroundColor: theme.palette.background.paper,\r\n                border: '2px solid #000',\r\n                boxShadow: theme.shadows[5],\r\n                padding: theme.spacing(2, 4, 3),\r\n            },\r\n        }),\r\n    );\r\n\r\n    const TransitionsModal = () => {\r\n        const classes = useStyles();\r\n        // const [openModal, setOpenModal] = useState(false);\r\n        const handleOpen = () => {\r\n            setOpenModal(true);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setOpenModal(false);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={openModal}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={openModal}>\r\n                        <div>\r\n                            <AddMember fire={() => {\r\n                                setOpenModal(false) \r\n                                getUserList(club)\r\n                            }} club={club} memberId={member} />\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const getListItem = (listData: Array<userDto>) => {\r\n        if (listData.length === 0) {\r\n            return (<div className=\"flex flex-col justify-center items-center mt-8\"><p className=\"text-2xl\">회원이 없습니다.</p></div>)\r\n        } else {\r\n            return listData.map(each => {\r\n                let id = each.id;\r\n                let nameNPosition = each.name + \" / \" + each.position;\r\n                let startDay = each.startDay;\r\n                let job = each.job;\r\n                let address = each.address;\r\n                let mobileNum = each.mobileNum;\r\n                mobileNum =\"H.P) \"+mobileNum.substr(0,3)+\"-\"+mobileNum.substr(4,4)+\"-\"+mobileNum.substr(7,4);\r\n                // console.log(\" imgUrl >> \", each.imgName);\r\n                let imgUrl = each.imgName === null ? logo : `https://clublions.s3.ap-northeast-2.amazonaws.com/${each.imgName}`;\r\n                console.log(\" imgUrl >> \", imgUrl);\r\n                return (\r\n                    <div>\r\n                        <div className=\"flex flex-row items-center w-full mt-5\">\r\n                            <div>\r\n                                <img src={imgUrl} alt=\"\" className=\"w-20 h-20 ml-5 mr-7\" />\r\n                            </div>\r\n                            <div className=\"flex flex-col\" onClick={(ev:any) => handleDetail(id)}>\r\n                                <div className=\"h-5 w-80\">\r\n                                    <span>{nameNPosition}</span>\r\n                                </div>\r\n                                <div className=\"h-px bg-gray-700 w-36 mt-3\"></div>\r\n                                <div className=\"h-30 bg-blue-100 w-124 mt-3 p-3 rounded-xl\">\r\n                                    <p>{startDay} 입회</p>\r\n                                    <p>{job}</p>\r\n                                    <p>{address}</p>\r\n                                    <p>{mobileNum}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"mt-2 ml-4\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    startIcon={<DeleteIcon />}\r\n                                    onClick={(ev) => {\r\n                                        console.log(\" id =>> \", id);\r\n                                        deleteMember(id);\r\n                                    }}\r\n                                >삭제</Button></div>\r\n                        </div>\r\n                        <div className=\"h-px bg-gray-700 w-full mt-3 mr-3 ml-3\"></div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const addMember = () => {\r\n        console.log(\"add Member!\");\r\n        setMember(-1);\r\n        if (club !== 0) {\r\n            console.log(\" club >>> \", club);\r\n            // history.push(\"/addMember\", { clubId: club });\r\n            setOpenModal(true);\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    const deleteMember = (id: number) => {\r\n        console.log(\"delete Member!\");\r\n        setOpen(true);\r\n        setDeleteId(id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col ml-5\">\r\n            <div id=\"searchClub\"></div>\r\n            <div id=\"groupArea\" className=\"m-4 flex flex-row\">\r\n                <div id=\"jigu\" className=\"flex flex-col\">\r\n                    <span>지구</span>\r\n                    <select className=\"input mt-2\" name=\"inpJigu\" onChange={handleJiguChange} onClick={handleClickSelect}>\r\n                        {\r\n                            jiguList.map((jigu: { id: number, name: string }, idx: number) => {\r\n                                return (<option value={jigu.id}>{jigu.name}</option>)\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div id=\"jiyeok\" className=\"flex flex-col\">\r\n                    <span>지역</span>\r\n                    <select className=\"input mt-2\" name=\"inpJiyeok\" onChange={handleJiyeokChange}>\r\n                        {\r\n                            jiyeokList.map((jiyeok: { id: number, name: string }) => {\r\n                                return (<option value={jiyeok.id}>{jiyeok.name}</option>)\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div id=\"jidae\" className=\"flex flex-col\">\r\n                    <span>지대</span>\r\n                    <select className=\"input mt-2\" name=\"inpJidae\" onChange={handleJidaeChange}>\r\n                        {\r\n                            jidaeList.map((jidae: { id: number, name: string }) => {\r\n                                return (<option value={jidae.id}>{jidae.name}</option>)\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div id=\"club\" className=\"flex flex-col\">\r\n                    <span>클럽</span>\r\n                    <select className=\"input mt-2\" name=\"inpClub\" onChange={handleClubChange}>\r\n                        {\r\n                            clubList.map((club: { id: number, name: string }) => {\r\n                                return (<option value={club.id}>{club.name}</option>)\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"memberList\" className=\"max-w-3xl\">\r\n                <div className=\"flex flex-row justify-between items-center pr-4 pl-4\">\r\n                    <span>*회원 리스트</span>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<PersonAdd />}\r\n                        className=\"mr-3\"\r\n                        onClick={addMember}\r\n                    >회원 추가</Button>\r\n                </div>\r\n                {getListItem(userList)}\r\n            </div>\r\n            {DeleteWarningSnackBar()}\r\n            {TransitionsModal()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminMain;","C:\\Users\\memeo\\lions\\lions_front\\src\\common.js",[],["61","62"],"C:\\Users\\memeo\\lions\\lions_front\\src\\screens\\notfound.tsx",[],"C:\\Users\\memeo\\lions\\lions_front\\src\\screens\\admin\\addMember.tsx",["63","64","65","66","67","68","69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":32,"nodeType":"80","messageId":"81","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"82","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":17},{"ruleId":"78","severity":1,"message":"83","line":8,"column":10,"nodeType":"80","messageId":"81","endLine":8,"endColumn":13},{"ruleId":"78","severity":1,"message":"84","line":8,"column":15,"nodeType":"80","messageId":"81","endLine":8,"endColumn":26},{"ruleId":"78","severity":1,"message":"85","line":8,"column":28,"nodeType":"80","messageId":"81","endLine":8,"endColumn":36},{"ruleId":"78","severity":1,"message":"86","line":8,"column":38,"nodeType":"80","messageId":"81","endLine":8,"endColumn":53},{"ruleId":"78","severity":1,"message":"79","line":9,"column":9,"nodeType":"80","messageId":"81","endLine":9,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":68,"column":17,"nodeType":"89","endLine":68,"endColumn":52},{"ruleId":"78","severity":1,"message":"90","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":10,"column":10,"nodeType":"80","messageId":"81","endLine":10,"endColumn":14},{"ruleId":"78","severity":1,"message":"91","line":20,"column":11,"nodeType":"80","messageId":"81","endLine":20,"endColumn":19},{"ruleId":"78","severity":1,"message":"92","line":41,"column":11,"nodeType":"80","messageId":"81","endLine":41,"endColumn":18},{"ruleId":"78","severity":1,"message":"93","line":42,"column":12,"nodeType":"80","messageId":"81","endLine":42,"endColumn":16},{"ruleId":"78","severity":1,"message":"94","line":43,"column":12,"nodeType":"80","messageId":"81","endLine":43,"endColumn":18},{"ruleId":"78","severity":1,"message":"95","line":44,"column":12,"nodeType":"80","messageId":"81","endLine":44,"endColumn":17},{"ruleId":"78","severity":1,"message":"96","line":56,"column":11,"nodeType":"80","messageId":"81","endLine":56,"endColumn":18},{"ruleId":"78","severity":1,"message":"97","line":212,"column":15,"nodeType":"80","messageId":"81","endLine":212,"endColumn":25},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"78","severity":1,"message":"98","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":13},{"ruleId":"78","severity":1,"message":"99","line":8,"column":10,"nodeType":"80","messageId":"81","endLine":8,"endColumn":20},{"ruleId":"78","severity":1,"message":"100","line":17,"column":37,"nodeType":"80","messageId":"81","endLine":17,"endColumn":42},{"ruleId":"78","severity":1,"message":"101","line":17,"column":44,"nodeType":"80","messageId":"81","endLine":17,"endColumn":50},{"ruleId":"78","severity":1,"message":"102","line":18,"column":11,"nodeType":"80","messageId":"81","endLine":18,"endColumn":20},{"ruleId":"78","severity":1,"message":"103","line":21,"column":11,"nodeType":"80","messageId":"81","endLine":21,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":55,"column":7,"nodeType":"106","endLine":55,"endColumn":9,"suggestions":"107"},{"ruleId":"78","severity":1,"message":"108","line":149,"column":11,"nodeType":"80","messageId":"81","endLine":149,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":159,"column":25,"nodeType":"89","endLine":159,"endColumn":74},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AddMember' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'useQuery' is defined but never used.","'useSubscription' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Icon' is defined but never used.","'MainPros' is defined but never used.","'refJigu' is assigned a value but never used.","'jigu' is assigned a value but never used.","'jiyeok' is assigned a value but never used.","'jidae' is assigned a value but never used.","'history' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'Img' is defined but never used.","'useHistory' is defined but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'picUpload' is assigned a value but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.memberId' and 'setValue'. Either include them or remove the dependency array.","ArrayExpression",["111"],"'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [props.memberId, setValue]",{"range":"114","text":"115"},[2082,2084],"[props.memberId, setValue]"]